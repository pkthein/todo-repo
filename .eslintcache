[{"C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\index.js":"1","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\reportWebVitals.js":"2","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\App.js":"3","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\Day1.js":"4","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\Todo.js":"5","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\TTT.js":"6","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\TodoListings.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1059,"mtime":1610601129871,"results":"11","hashOfConfig":"9"},{"size":886,"mtime":1610076339165,"results":"12","hashOfConfig":"9"},{"size":2171,"mtime":1610599315210,"results":"13","hashOfConfig":"9"},{"size":1889,"mtime":1610431215280,"results":"14","hashOfConfig":"9"},{"size":1692,"mtime":1610599287904,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"lz0k8r",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\index.js",[],["33","34"],"C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\reportWebVitals.js",[],"C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\App.js",[],"C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\Day1.js",[],"C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\Todo.js",["35"],"import React from 'react'\r\n\r\nimport TodoListings from './TodoListings'\r\n\r\nconst style = {\r\n  box: {\r\n    width: '40%',\r\n    border: 'solid black',\r\n    borderRadius: 5,\r\n    padding: '8px 8px'\r\n  },\r\n  app: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 8\r\n  }\r\n}\r\n\r\nconst Todo = ({}) => {\r\n  // tasks String[]\r\n  const [tasks, setTasks] = React.useState([])\r\n  const [dones, setDones] = React.useState([])\r\n\r\n  const addTask = () => {\r\n    let task = prompt('Please enter the new task...')\r\n\r\n    setTasks([ ...tasks, task])\r\n  }\r\n\r\n  const removeTask = (index) => {\r\n    const done = tasks.splice(index, 1)\r\n    addToDone(done[0])\r\n    setTasks([ ...tasks ])\r\n  }\r\n\r\n  const addToDone = (done) => {\r\n    setDones([ ...dones, done ])\r\n  }\r\n\r\n  const removeDone = (index) => {\r\n    const done = dones.splice(index, 1)\r\n    setDones([ ...dones ])\r\n\r\n    alert(`'${done[0]}' was successfully checkedout!`)\r\n  }\r\n\r\n  const moveToTasks = (index) => {\r\n    const task = dones.splice(index, 1)\r\n\r\n    // let tmp = []\r\n    // for (let i = 0; i < dones.length; i++) {\r\n    //   tmp.push(dones[i])\r\n    // }\r\n\r\n    // setDones(tmp)\r\n    setDones(dones)\r\n    setTasks([ ...tasks, task ])\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>TODO APP</h1>\r\n      <hr/>\r\n\r\n      <div>\r\n        <button\r\n          className=\"btn btn-outline-primary btn-sm\"\r\n          onClick={ () => addTask() }\r\n        >\r\n          Add Task\r\n        </button>\r\n\r\n        <div style={ style.app }>\r\n          <div style={{ ...style.box, marginRight: 4 }}>\r\n            <TodoListings\r\n              success={{ value: 'Done' }}\r\n              successClick={ removeTask }\r\n              title={ 'Tasks' }\r\n              data={ tasks }\r\n            />\r\n          </div>\r\n          \r\n          <div style={ style.box }>\r\n            <TodoListings\r\n              danger={{ value: 'Checkout' }}\r\n              dangerClick={ removeDone }\r\n              warning={{ value: 'Undo' }}\r\n              warningClick={ moveToTasks }\r\n              title={ 'Done' }\r\n              data={ dones }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\TTT.js",["36"],"import React from 'react'\r\nconst TTT = ({}) => {\r\n  const [row1, setRow1] = React.useState(['-', '-', '-'])\r\n  const [row2, setRow2] = React.useState(['-', '-', '-'])\r\n  const [row3, setRow3] = React.useState(['-', '-', '-'])\r\n  const [turn, setTurn] = React.useState(0)\r\n  const [message, setMessage] = React.useState('')\r\n  const updateRow = (r, c) => {\r\n    let row\r\n    if (r === 1) { row = row1 } else if (r === 2) { row = row2 } else { row = row3 }\r\n    row[c] = turn % 2 ? 'X' : 'O'\r\n    setTurn(turn + 1)\r\n    if (r === 1) { setRow1(row) } else if (r === 2) { setRow2(row) } else { setRow3(row) }\r\n    evalGame(turn - 1)\r\n  }\r\n  const evalGame = (turn) => {\r\n    let flag = false\r\n    if (row1[0] === row1[1] && row1[1] === row1[2] && row1[0] !== '-') { flag = true } else if (row2[0] === row2[1] && row2[1] === row2[2] && row2[0] !== '-') { flag = true } else if (row3[0] === row3[1] && row3[1] === row3[2] && row3[0] !== '-') { flag = true } else if (row1[0] === row2[0] && row2[0] === row3[0] && row1[0] !== '-') { flag = true } else if (row1[1] === row2[1] && row2[1] === row3[1] && row1[1] !== '-') { flag = true } else if (row1[2] === row2[2] && row2[2] === row3[2] && row1[2] !== '-') { flag = true } else if (row1[0] === row2[1] && row2[1] === row3[2] && row1[0] !== '-') { flag = true } else if (row1[2] === row2[1] && row2[1] === row3[0] && row1[2] !== '-') { flag = true }\r\n    if (flag) { setMessage(`${(turn + 1) % 2 ? 'X' : 'O'} won!`) } else if (turn === 9) { setMessage('Tie!') }\r\n  }\r\n  return (\r\n    <div> <div> { row1.map((v, i) => (<button key={ i } onClick={ () => updateRow(1, i) }>{ v }</button>)) }</div><div>{ row2.map((v, i) => (<button key={ i } onClick={ () => updateRow(2, i) }>{ v }</button>)) }</div><div>{ row3.map((v, i) => (<button key={ i } onClick={ () => updateRow(3, i) }>{ v }</button>)) }</div>{ message }</div>\r\n  )\r\n}\r\nexport default TTT\r\n","C:\\Users\\PhyoKo\\Desktop\\github\\react-boot-intro\\src\\components\\TodoListings.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":19,"column":15,"nodeType":"43","messageId":"44","endLine":19,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":2,"column":14,"nodeType":"43","messageId":"44","endLine":2,"endColumn":16},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]